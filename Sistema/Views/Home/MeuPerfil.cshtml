@model Sistema.Models.VMPerfil

@{
    ViewBag.Title = "- Meu Perfil";
    Layout = "~/Views/Shared/_LayoutPerfil.cshtml";
}

<section class="profile-section content-container">
    <div class="bg">
    </div>

    <div class="profile-pic-container">
        <div class="profile-pic">
            @if (Model.Foto == null)
            {
                <div class="circle-pic avatar-placeholder">
                    <p>@Model.Nome.ToString()[0]</p>
                </div>
            }
            else
            {
                <img class="circle-pic" src="~/Uploads/@Model.Foto" alt="Foto de perfil" />
            }

        </div>
        <a class="profile-pic-edit" href="#" data-open-modal="modalPic"><span class="iconify" data-icon="tabler:camera" data-inline="false"></span></a>
    </div>

    <h1 class="username">@Model.Nome</h1>

    <div class="profile-info">
        <div class="bio">
            @using (Html.BeginForm("EditarBiografia", "Home", FormMethod.Post))
            {
                @Html.TextAreaFor(model => model.Biografia, new { @class = "bio-text", @id = "editTxt", @maxlength = "110", @placeholder = "Aqui você pode colocar sua área de formação, seus interesses, e também as formas que as pessoas podem entrar em contato com você de forma mais rápida!" })
            }
        </div>
    </div>

    <div class="profile-interests">
        <ul class="tag-group interests">

            @{
                int x = 0;
                foreach (var item in Model.UsuarioTags)
                {
                    if (x < 3)
                    {
                        <li class="tag-container">
                            <div class="tag"><span class="tag-text">@item.Tag.Nome</span></div>
                        </li>
                        x++;
                    }
                }
                if (Model.UsuarioTags.Count > 3)
                {
                    <li class="tag-container">
                        <div class="tag"><span class="tag-text">...</span></div>
                    </li>
                }
                if (x == 0)
                {
                    <li class="tag-container">
                        <div class="tag"><span class="tag-text">Seus interesses aparecerão aqui!</span></div>
                    </li>
                }
            }

            <li>
                <button class="add-tag" data-open-modal="modalTags"><span class="iconify" data-icon="tabler:plus" data-inline="false"></span></button>
            </li>
        </ul>
    </div>

    <h2 class="profile-section-title">Meus projetos</h2>
</section>

<section class="projects-section">

    <div class="glider-contain">
        <div class="glider">
            @foreach (var item in Model.IntegrantesProjetos)
            {
                if (item.Projeto.Ativo == true)
                {
                    <div class="card-container">
                        <div class="project-card">
                            <a href="@Url.Action("MeuProjeto", new { id = item.ProjetoId })">
                                <div class="card-img">
                                    <img src="~/Uploads/@item.Projeto.Logo" alt="Imagem do projeto" />
                                </div>
                                <div>
                                    <h3 class="card-title">@item.Projeto.Nome</h3>
                                    <p class="card-text">@item.Projeto.Descricao</p>
                                </div>
                                <ul class="card-tags">
                                    @{
                                        int n = 0;

                                        foreach (var pro in item.Projeto.ProjetoTags)
                                        {

                                            if (n < 3)
                                            {
                                                <li class="tag-container">
                                                    <div class="tag"><span class="tag-text">@pro.Tag.Nome</span></div>
                                                </li>
                                                n++;
                                            }
                                        }
                                    }
                                </ul>
                            </a>
                        </div>
                    </div>
                }
            }
        </div>

        <button aria-label="Previous" class="glider-prev"><span class="iconify" data-icon="tabler:chevron-left" data-inline="false"></span></button>
        <button aria-label="Next" class="glider-next"><span class="iconify" data-icon="tabler:chevron-right" data-inline="false"></span></button>
        <div role="tablist" class="glider-dots"></div>

    </div>

    <div class="add-project"><a class="btn btn-primary" data-open-modal="modalProjetos">Novo projeto<span class="iconify" data-icon="tabler:plus" data-inline="true"></span></a></div>
</section>

<section class="content-container section-separator">
    <h2 class="profile-section-title">Projetos salvos</h2>
</section>

<section class="projects-section">

    <div class="glider-contain">
        <div class="glider">
            @foreach (var item in Model.ProjetosSalvos)
            {
                if (item.Projeto.Ativo == true)
                {
                    <div class="card-container">
                        <div class="project-card">
                            <a href="@Url.Action("MeuProjeto", new { id = item.ProjetoId })">
                                <div class="card-img">
                                    <img src="~/Uploads/@item.Projeto.Logo" alt="Imagem do projeto" />
                                </div>
                                <h3 class="card-title">@item.Projeto.Nome</h3>
                                <p class="card-text">@item.Projeto.Descricao</p>
                                <ul class="card-tags">
                                    @{
                                        int n = 0;

                                        foreach (var pro in item.Projeto.ProjetoTags)
                                        {
                                            if (n < 3)
                                            {
                                                <li class="tag-container">
                                                    <div class="tag"><span class="tag-text">@pro.Tag.Nome</span></div>
                                                </li>
                                                n++;
                                            }
                                        }
                                    }
                                </ul>
                            </a>

                            <button class="btn-delete" onclick="location.href='@Url.Action("ExcluirProjetosSalvos", "Home", new { id = item.Id })'"><span class="iconify" data-icon="tabler:trash" data-inline="false"></span></button>

                        </div>
                    </div>
                }
            }
        </div>

        <button aria-label="Previous" class="glider-prev"><span class="iconify" data-icon="tabler:chevron-left" data-inline="false"></span></button>
        <button aria-label="Next" class="glider-next"><span class="iconify" data-icon="tabler:chevron-right" data-inline="false"></span></button>
        <div role="tablist" id="resp-dots" class="glider-dots"></div>

    </div>

</section>

<div class="modal-bg hidden" id="modalPic">
    <div class="modal">
        <div class="modal-header">
            <h3 class="modal-title">Editar Foto</h3>
            <div class="close-modal" data-close-modal="modalPic">
                <span class="iconify" data-icon="tabler:x" data-inline="true"></span>
            </div>
        </div>
        @using (Html.BeginForm("EditarFoto", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="modal-body">
                @*<div class="profile-pic" id="preview-container">
                        <img class="circle-pic" id="img-preview" />
                    </div>*@

                <div class="preview-container">
                    <div id="upload-demo">

                    </div>
                </div>

                <span class="file-name" id="preview-file-name"></span>
            </div>
            <div class="modal-footer">
                <div class="form-btns">
                    @*<input name="arq" class="btn btn-secondary" type="file" id="img-input" />*@
                    <label for="upload" class="btn btn-secondary">Selecione um arquivo</label>
                    <input name="arq" class="btn btn-secondary" type="file" id="upload" />
                    <button class="btn btn-primary upload-result">Confirmar</button>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal-bg hidden" id="modalTags">
    <div class="modal">
        <div class="modal-header">
            <h3 class="modal-title">Editar interesses</h3>
            <div class="close-modal" data-close-modal="modalTags">
                <span class="iconify" data-icon="tabler:x" data-inline="true"></span>
            </div>
        </div>
        <div class="modal-body">
            <ul class="tag-group">
                @{
                    int i = 0;
                    foreach (var item in Model.UsuarioTags)
                    {
                        <li class="tag-container">
                            <div class="tag"><span class="tag-text">@item.Tag.Nome</span><input onclick="window.location.href='@Url.Action("ExcluirTag", "Home", new { id = item.Id })'" class="iconify" data-icon="tabler:x" data-inline="true" /></div>
                        </li>
                        i++;
                    }
                    if (i == 0)
                    {
                        <li class="tag-container">
                            <div class="tag"><span class="tag-text">Utilize o campo abaixo para adicionar um interesse!</span></div>
                        </li>
                    }
                }
            </ul>


                <div class="tag-form-group">
                    <select id="tag-input">
                    </select>
                    <button class="add-tag" type="submit" id="add-tag"><span class="iconify" data-icon="tabler:plus" data-inline="false"></span></button>
                    <span id="msg"></span>
                </div>
            
        </div>
    </div>
</div>

<div class="modal-bg hidden" id="modalProjetos">
    <div class="modal">
        <div class="modal-header">
            <h3 class="modal-title">Editar Foto</h3>
            <div class="close-modal" data-close-modal="modalProjetos">
                <span class="iconify" data-icon="tabler:x" data-inline="true"></span>
            </div>
        </div>
        @using (Html.BeginForm("CriarProjeto", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="modal-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.NomeProjeto, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.NomeProjeto)
                    @Html.ValidationMessageFor(model => model.NomeProjeto, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.TextAreaFor(model => model.Descricao, new { @class = "bio-text" })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary">Criar</button>
            </div>
        }
    </div>
</div>


@section Scripts {
    <script src="~/Scripts/croppie.js"></script>

    <script>
        var $uploadCrop;


        function readFile(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('.upload-demo').addClass('ready');
                    $uploadCrop.croppie('bind', {
                        url: e.target.result
                    }).then(function () {
                        console.log('jQuery bind complete');
                    });

                }

                reader.readAsDataURL(input.files[0]);
            }

        }

        $uploadCrop = $('#upload-demo').croppie({
            viewport: {
                width: 128,
                height: 128,
                type: 'circle'
            }
        });


        $('#upload').on('change', function () {
            crImage.classList.remove('hidden');
            const file = document.querySelector('#upload').value;
            const fileName = document.querySelector('#preview-file-name');
            fileName.innerText = file.substring(file.lastIndexOf('\\') + 1)
            readFile(this);
        });

        $('.upload-result').on('click', function (ev) {
            ev.preventDefault();
            $uploadCrop.croppie('result', {
                type: 'blob',
                //size: 'viewport'
                size: { width: 256, height: 256 }
            }).then(function (resp) {
                resp = resp.slice(0, resp.size, "image/png")

                let data = new FormData();
                data.append('arq', resp, 'blob.png');

                $.ajax({
                    url: "/Home/EditarFoto",
                    type: 'POST',
                    data: data,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        document.location.reload();
                    }
                });

            });
        });

        const crImage = document.querySelector('.cr-image');
        crImage.classList.add('hidden');

    </script>


    <script>

        const headers = {
            "Content-Type": "application/json",
            "Access-Control-Origin": "*"
        }

        fetch("/Home/AutoCompleteTags", {
            method: 'POST',
            headers: headers,
            body: null
        }).then(res => res.json())
            .then(resJson => renderOptions(resJson))

            const tagSelect = document.querySelector('#tag-input');

        function renderOptions(optList) {

            optList.forEach((item) => {
                const option = document.createElement('option');
                option.setAttribute('value', item.Nome);
                option.innerText = item.Nome;
                tagSelect.appendChild(option);
            })
        }

        const addTag = document.querySelector('#add-tag');

        addTag.addEventListener('click', () => {
            const data = {
                PesquisaTag: tagSelect.value
            }
            fetch("/Home/AdicionarTag", {
                method: 'POST',
                headers: headers,
                body: JSON.stringify(data)
            }).then(res => res.json())
                .then(resJson => {
                    if (resJson == "n") {
                        Swal.fire({
                            title: "Erro",
                            text: "Tag ja cadastrada!",
                            icon: "error",
                            confirmButtonText: 'OK'
                        })
                    }
                })
        })

    </script>
}





