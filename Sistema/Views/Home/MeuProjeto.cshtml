@model Sistema.Models.VMProjeto


<div class="form-horizontal espaco">
    <div class="retangulo">
        <div class="infos">
            <div class="imagem">
                @if (Model.Logo == "projeto.svg")
                {
                    <div class="img-projeto" data-open-modal="modalPic"> <img src="~/Content/img/add-logo.svg" /> </div>
                }
                else
                {

                    <div class="img-projeto" style="" data-open-modal="modalPic">
                        <img class="logo-overlay" src="~/Content/img/add-logo-transp.svg" />
                        <img class="blurred" src="~/Uploads/@Model.Logo" />
                    </div>
                }
                @*<a class="profile-pic-edit" href="#" data-open-modal="modalPic"><span class="iconify" data-icon="tabler:camera" data-inline="false"></span></a>*@
            </div>
            <div class="descricao">
                <div class="input-infos">

                    @using (Html.BeginForm())
                    {
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    }

                </div>
                <div class="infos-txt">
                    <textarea class="bio-text" id="editTxt">@Model.Descricao</textarea>
                </div>
                <div>
                    <ul class="tag-group interests">

                        @{
                            int x = 0;
                            foreach (var item in Model.ProjetoTags)
                            {
                                if (x < 3)
                                {
                                    <li class="tag-container">
                                        <div class="tag"><span class="tag-text">@item.Tag.Nome</span></div>
                                    </li>
                                    x++;
                                }
                            }
                            if (Model.ProjetoTags.Count > 3)
                            {
                                <li class="tag-container">
                                    <div class="tag"><span class="tag-text">...</span></div>
                                </li>
                            }
                            if (x == 0)
                            {
                                <li class="tag-container">
                                    <div class="tag"><span class="tag-text">As tags aparecerão aqui!</span></div>
                                </li>
                            }
                        }

                        <li>
                            <button class="add-tag" data-open-modal="modalTag"><span class="iconify" data-icon="tabler:plus" data-inline="false"></span></button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="upload">
            <p class="upload-dica">
                Recomedamos que você insira algumas informações especificas sobre o seu projeto, o que ajudará possiveis investidores a compreender melhor os objetivos financeiros como projeções financeiras, pesquisa de mercado, valor de investimento, retorno financeiro...
            </p>
            <button class="upload-input" data-open-modal="modalUploads">
                <span class="iconify" data-icon="tabler:cloud-upload" data-inline="false"></span>
            </button>
            <div class="upload-arq">
                @{
                    int quant = 0;
                    foreach (var item in Model.ArquivosProjetos)
                    {
                        <div class="uploads-icon">
                            <span class="iconify" data-icon="tabler:file-text" data-inline="false"></span>
                        </div>
                        quant++;
                    }
                    if (quant == 0)
                    {
                        <p>Seus uploads de documentos aparecerão aqui ;)</p>
                    }
                }

            </div>
        </div>
    </div>

    <div class="projeto-equipe">
        <a class="title-equipe" data-open-modal="modalEquipe"> Equipe <span class="iconify" data-icon="tabler:user-plus" data-inline="false"></span></a>
        <div class="equipe-container">
            @foreach (var item in Model.IntegrantesProjetos)
            {
                <div class="profile-pic profile-pic-mini">
                    <a href="@Url.Action("VisitarPerfil", new { id = item.UsuarioID })">

                        @if (item.Usuario.Foto == null)
                        {
                            <div class="circle-pic avatar-placeholder">
                                <p>@item.Usuario.Nome.ToString()[0]</p>
                            </div>
                        }
                        else
                        {
                            <img class="circle-pic" src="~/Uploads/@item.Usuario.Foto" />
                        }

                    </a>
                </div>
            }
        </div>
    </div>

    <div class="form-btns">
        @Html.ActionLink("Voltar", "Principal", "Home", new { @class = "btn btn-secondary" })
        <input type="submit" value="Concluir" class="btn btn-primary" />
    </div>
</div>

<div class="modal-bg hidden" id="modalPic">
    <div class="modal">
        <div class="modal-header">
            <h3 class="modal-title">Editar Foto</h3>
            <div class="close-modal" data-close-modal="modalPic">
                <span class="iconify" data-icon="tabler:x" data-inline="true"></span>
            </div>
        </div>
        @using (Html.BeginForm("EditarLogo", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(model => model.Id)
            <div class="modal-body">
                <div class="preview-container">
                    <div id="upload-demo">

                    </div>
                </div>

                <span class="file-name" id="preview-file-name"></span>
            </div>
            <div class="modal-footer">
                <div class="form-btns">
                    <label for="upload" class="btn btn-secondary">Selecione um arquivo</label>
                    <input name="arq" class="btn btn-secondary" type="file" id="upload" />
                    <button class="btn btn-primary upload-result">Confirmar</button>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal-bg hidden" id="modalTag">
    <div class="modal">
        <div class="modal-header">
            <h3 class="modal-title">Editar interesses</h3>
            <div class="close-modal" data-close-modal="modalTag">
                <span class="iconify" data-icon="tabler:x" data-inline="true"></span>
            </div>
        </div>
        <div class="modal-body">
            <ul class="tag-group">
                @{
                    int i = 0;
                    foreach (var item in Model.ProjetoTags)
                    {
                        <li class="tag-container">
                            <div class="tag"><span class="tag-text">@item.Tag.Nome</span><input onclick="window.location.href='@Url.Action("ExcluirTagProjeto", "Home", new { id = item.Id })'" class="iconify" data-icon="tabler:x" data-inline="true" /></div>
                        </li>
                        i++;
                    }
                    if (i == 0)
                    {
                        <li class="tag-container">
                            <div class="tag"><span class="tag-text">Utilize o campo abaixo para adicionar um interesse!</span></div>
                        </li>
                    }
                }
            </ul>

            @using (Html.BeginForm("AdicionarTagProjeto", "Home", FormMethod.Post, new { @class = "form single-col" }))
            {
                <div class="form-group-row">
                    @Html.EditorFor(model => model.PesquisaTag)
                    @Html.HiddenFor(model => model.Id)
                    <button class="add-tag" type="submit" id="add-tag"><span class="iconify" data-icon="tabler:plus" data-inline="false"></span></button>
                    <span id="msg"></span>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal-bg hidden" id="modalUploads">
    <div class="modal">
        <div class="modal-header">
            <h3 class="modal-title">Uploads</h3>
            <div class="close-modal" data-close-modal="modalUploads">
                <span class="iconify" data-icon="tabler:x" data-inline="true"></span>
            </div>
        </div>
        @using (Html.BeginForm("AdicionarUpload", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(model => model.Id)
            <div class="modal-footer">
                <input name="arq" class="btn btn-secondary" type="file" />
                <button class="btn btn-primary">Confirmar</button>
            </div>
        }
    </div>
</div>

<div class="modal-bg hidden" id="modalEquipe">
    <div class="modal">
        <div class="modal-header">
            <h3 class="modal-title">Editar Equipe</h3>
            <div class="close-modal" data-close-modal="modalEquipe">
                <span class="iconify" data-icon="tabler:x" data-inline="true"></span>
            </div>
        </div>
        <div class="modal-body">


            <div class="integrantes-grid">
                @*<label>Administrador</label>*@

                @foreach (var item in Model.IntegrantesProjetos)
                {
                    <div class="integrante-container">
                        <div class="integrante-info">

                            <div class="profile-pic profile-pic-mini">
                                <img class="circle-pic" src="~/Uploads/@item.Usuario.Foto" />
                            </div>

                            <div class="integrante-contato">
                                <p>@item.Usuario.Email</p>
                                <p>@item.Usuario.Nome</p>
                            </div>
                        </div>
                        <div class="integrante-edit">
                            @if (item.Adm)
                            {
                                <input type="checkbox" id="checkbox-element-@item.Id" checked="checked" />
                                <label for="checkbox-element-@item.Id">
                                    <span class="indicator"></span>
                                    <span class="label-text">Administrador</span>
                                </label>
                            }
                            else
                            {
                                <input type="checkbox" id="checkbox-element-@item.Id" />
                                <label for="checkbox-element-@item.Id">
                                    <span class="indicator"></span>
                                    <span class="label-text">Administrador</span>
                                </label>
                                <button class="btn delete-acc" onclick="window.location.href='@Url.Action("ExcluirIntegrante", "Home", new { id = item.Id })'">Remover</button>
                            }
                        </div>
                    </div>
                }

            </div>


            @using (Html.BeginForm("AdicionarIntegrante", "Home", FormMethod.Post))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.PesquisaEmail)
                    @Html.EditorFor(model => model.PesquisaEmail)
                    @Html.HiddenFor(model => model.Id)
                    <button class="btn btn-primary">Confirmar</button>
                    <span id="msg"></span>
                </div>
            }
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/croppie.js"></script>

    <script>
        var $uploadCrop;


        function readFile(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('.upload-demo').addClass('ready');
                    $uploadCrop.croppie('bind', {
                        url: e.target.result
                    }).then(function () {
                        console.log('jQuery bind complete');
                    });

                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $uploadCrop = $('#upload-demo').croppie({
            viewport: {
                width: 189,
                height: 133,
                type: 'square'
            }
        });


        $('#upload').on('change', function () {
            crImage.classList.remove('hidden');
            const file = document.querySelector('#upload').value;
            const fileName = document.querySelector('#preview-file-name');
            fileName.innerText = file.substring(file.lastIndexOf('\\') + 1)
            readFile(this);
        });

        $('.upload-result').on('click', function (ev) {
            ev.preventDefault();
            $uploadCrop.croppie('result', {
                type: 'blob',
                //size: 'viewport'
                size: { width: 756, height: 532 }
            }).then(function (resp) {
                resp = resp.slice(0, resp.size, "image/png")

                let data = new FormData();
                data.append('arq', resp, 'blob.png');
                const projetoId = document.querySelector('input[name="Id"').value;
                data.append('Id', projetoId);

                $.ajax({
                    url: "/Home/EditarLogo",
                    type: 'POST',
                    data: data,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        document.location.reload();
                    }
                });

            });
        });

        const crImage = document.querySelector('.cr-image');
        crImage.classList.add('hidden');

    </script>

    <script>
        const allCheckboxes = document.querySelectorAll('input[type="checkbox"');

        allCheckboxes.forEach((item) => {
            item.addEventListener('click', () => {
                if (item.checked) {
                    //POST true
                }
                else {
                    //POST false
                }
            })
        })

    </script>
}


