@model Sistema.Models.Cadastro

@{
    ViewBag.Title = "Cadastro";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-section">
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NomeSocial, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.NomeSocial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeSocial, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control cpf" } })
                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-section">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                <span id="msg"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmailRecuperacao, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.EmailRecuperacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailRecuperacao, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmaSenha, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.ConfirmaSenha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmaSenha, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="g-recaptcha" data-sitekey="6LcX5N0ZAAAAAP6ALQ-c9xmnE-SolRb56MSNFgyg"></div>
        </div>

        <div class="form-btns">
            @Html.ActionLink("Voltar", "Principal", "Home", new { @class = "btn btn-secondary" })
            <input type="submit" disabled="disabled" value="Concluir" class="btn btn-primary" />
        </div>
    </div>
}
<script>
    $("#Email").focusout(function () {
        var email = $(this).val();
        $.ajax({
            dataType: "json",
            type: "POST",
            url: "/Usuarios/ValidarEmail",
            data: { email },
            success: function (retorno) {
                if (retorno == "s") {
                    $("#botao").attr('disabled', 'disabled');
                    $("#msg").text("E-mail já cadastrado");
                    $("#msg").removeAttr("class");
                    $("#msg").attr("class", "text-danger");
                }
                else {
                    $("#botao").removeAttr("disabled");
                    $("#msg").text("E-mail validado");
                    $("#msg").removeAttr("class");
                    $("#msg").attr("class", "text-success");
                }
            }
        });
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
}


